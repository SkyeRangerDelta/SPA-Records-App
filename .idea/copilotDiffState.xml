<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.github/workflows/docker-ghcr.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.github/workflows/docker-ghcr.yml" />
              <option name="originalContent" value="name: Build and Push Docker Image to GHCR&#10;&#10;on:&#10;  push:&#10;    branches:&#10;      - main&#10;&#10;jobs:&#10;  build-and-push:&#10;    runs-on: ubuntu-latest&#10;    permissions:&#10;      contents: read&#10;      packages: write&#10;&#10;    steps:&#10;      - name: Checkout repository&#10;        uses: actions/checkout@v4&#10;&#10;      - name: Log in to GitHub Container Registry&#10;        uses: docker/login-action@v3&#10;        with:&#10;          registry: ghcr.io&#10;          username: ${{ github.actor }}&#10;          password: ${{ secrets.GITHUB_TOKEN }}&#10;&#10;      - name: Extract repository name&#10;        id: repo&#10;        run: echo &quot;REPO=${GITHUB_REPOSITORY,,}&quot; &gt;&gt; $GITHUB_ENV&#10;&#10;      - name: Build Docker image&#10;        run: |&#10;          docker build \&#10;            --label &quot;org.opencontainers.image.authors=${{ github.actor }}&quot; \&#10;            --label &quot;org.opencontainers.image.title=${{ env.REPO }}&quot; \&#10;            --label &quot;org.opencontainers.image.source=https://github.com/${{ env.REPO }}&quot; \&#10;            -t ghcr.io/${{ env.REPO }}/spa-records-app:latest \&#10;            -t ghcr.io/${{ env.REPO }}/spa-records-app:${{ github.sha }} \&#10;            .&#10;&#10;      - name: Push Docker image (latest)&#10;        run: docker push ghcr.io/${{ env.REPO }}/spa-records-app:latest&#10;&#10;      - name: Push Docker image (commit SHA)&#10;        run: docker push ghcr.io/${{ env.REPO }}/spa-records-app:${{ github.sha }}&#10;&#10;" />
              <option name="updatedContent" value="name: Build and Push Docker Image to GHCR&#10;&#10;on:&#10;  push:&#10;    branches:&#10;      - main&#10;      - master&#10;      - experimental&#10;&#10;jobs:&#10;  build-and-push:&#10;    runs-on: ubuntu-latest&#10;    permissions:&#10;      contents: read&#10;      packages: write&#10;&#10;    steps:&#10;      - name: Checkout repository&#10;        uses: actions/checkout@v4&#10;&#10;      - name: Log in to GitHub Container Registry&#10;        uses: docker/login-action@v3&#10;        with:&#10;          registry: ghcr.io&#10;          username: ${{ github.actor }}&#10;          password: ${{ secrets.GITHUB_TOKEN }}&#10;&#10;      - name: Extract repository name&#10;        id: repo&#10;        run: echo &quot;REPO=${GITHUB_REPOSITORY,,}&quot; &gt;&gt; $GITHUB_ENV&#10;&#10;      - name: Set image tag&#10;        id: tag&#10;        run: |&#10;          if [[ &quot;${GITHUB_REF##*/}&quot; == &quot;master&quot; ]]; then&#10;            echo &quot;TAG=latest&quot; &gt;&gt; $GITHUB_ENV&#10;          elif [[ &quot;${GITHUB_REF##*/}&quot; == &quot;experimental&quot; ]]; then&#10;            echo &quot;TAG=experimental&quot; &gt;&gt; $GITHUB_ENV&#10;          else&#10;            echo &quot;TAG=latest&quot; &gt;&gt; $GITHUB_ENV&#10;          fi&#10;&#10;      - name: Build Docker image&#10;        run: |&#10;          docker build \&#10;            --label &quot;org.opencontainers.image.authors=${{ github.actor }}&quot; \&#10;            --label &quot;org.opencontainers.image.title=${{ env.REPO }}&quot; \&#10;            --label &quot;org.opencontainers.image.source=https://github.com/${{ env.REPO }}&quot; \&#10;            -t ghcr.io/${{ env.REPO }}/spa-records-app:${{ env.TAG }} \&#10;            -t ghcr.io/${{ env.REPO }}/spa-records-app:${{ github.sha }} \&#10;            .&#10;&#10;      - name: Push Docker image (branch tag)&#10;        run: docker push ghcr.io/${{ env.REPO }}/spa-records-app:${{ env.TAG }}&#10;&#10;      - name: Push Docker image (commit SHA)&#10;        run: docker push ghcr.io/${{ env.REPO }}/spa-records-app:${{ github.sha }}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>